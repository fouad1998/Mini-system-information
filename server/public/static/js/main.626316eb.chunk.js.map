{"version":3,"sources":["provider/Provider.js","app/EditEntry.jsx","app/Entries.jsx","app/AddEntry.jsx","app/App.js","index.js"],"names":["ProviderContext","createContext","Provider","children","useState","loading","setLoading","search","setSearch","entries","setEntries","authors","setAuthors","error","setError","onSearch","useCallback","value","onFetchHandler","a","axios","get","data","console","onAddHandler","add","dataF","FormData","append","name","description","owner","file","post","entry","state","includes","onRemoveHandler","id","delete","filter","onUpdateHandler","f","found","find","e","useEffect","Object","values","map","toString","indexOf","reduce","prev","curr","span","message","type","action","onClick","Dragger","Upload","EditEntry","visible","setAlert","onModalToggleHanlder","useContext","loadingUpdate","setLoadingUpdate","fileAdd","setFileAdd","onResetHandler","onUpdateClikHandler","completed","onSetFileAddHandler","key","event","target","log","title","okButtonProps","disabled","cancelButtonProps","okText","cancelText","onCancel","onOk","gutter","addonBefore","onChange","style","width","options","author","label","onSelect","TextArea","rows","autoSize","maxRows","minRows","placeholder","fileList","onRemove","beforeUpload","className","InboxOutlined","confirm","Modal","Entries","isModalVisible","setIsModalVisible","alert","updateItemID","setUpdateItemID","onRemoveEntryHandler","content","onEditEntryHandler","r","onClose","closable","dataSource","rowKey","record","pagination","defaultPageSize","position","showTitle","pageSizeOptions","showTotal","total","columns","onFilter","sorter","b","render","_","filtered","filterSearch","createdAt","Date","toLocaleDateString","modifiedAt","extension","filename","wrap","shape","window","open","DownloadOutlined","EditFilled","danger","DeleteFilled","AddEntry","onAddClikHandler","justify","flex","Search","size","FileAddFilled","App","height","overflow","overflowY","subTitle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.626316eb.chunk.js","sourcesContent":["import { Alert, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\nimport { createContext, useCallback, useEffect, useState } from \"react\";\n\nexport const ProviderContext = createContext({});\nconst Provider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [entries, setEntries] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [error, setError] = useState(void 0);\n\n  const onSearch = useCallback((value) => {\n    setSearch(value);\n  }, []);\n\n  const onFetchHandler = useCallback(async () => {\n    try {\n      setError(void 0);\n      setLoading(true);\n      const { data } = await axios.get(\"http://localhost:8000/entries\");\n      const { entries, authors } = data;\n      setAuthors(authors);\n      setEntries(entries);\n    } catch (e) {\n      console.error(e);\n      setError(\"Échec de téléchargment des données, svp reessayer une autre fois\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const onAddHandler = useCallback(async (add) => {\n    try {\n      const dataF = new FormData();\n      dataF.append(\"name\", add.name);\n      dataF.append(\"description\", add.description);\n      dataF.append(\"owner\", add.owner);\n      dataF.append(\"file\", add.file);\n      const { data: entry } = await axios.post(\"http://localhost:8000/add\", dataF);\n      setEntries((state) => [...state, entry]);\n      setAuthors((state) => {\n        if (state.includes(entry.owner)) {\n          return state;\n        }\n\n        return [...state, entry.owner];\n      });\n      return true;\n    } catch {\n      return false;\n    }\n  }, []);\n\n  const onRemoveHandler = useCallback(async (id) => {\n    try {\n      await axios.delete(\"http://localhost:8000/remove?id=\" + id);\n      setEntries((state) => state.filter((entry) => entry.id !== id));\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }, []);\n\n  const onUpdateHandler = useCallback(async (data) => {\n    try {\n      const f = new FormData();\n      f.append(\"id\", data.id);\n      f.append(\"name\", data.name);\n      f.append(\"description\", data.description);\n      f.append(\"owner\", data.owner);\n      if (typeof data.file === \"object\") {\n        f.append(\"file\", data.file);\n      }\n\n      await axios.post(\"http://localhost:8000/update\", f);\n      setEntries((state) => {\n        const found = state.find((e) => e.id === data.id);\n        if (typeof found !== \"object\") {\n          return state;\n        }\n\n        found.name = data.name;\n        found.description = data.description;\n        found.owner = data.owner;\n        return [...state];\n      });\n      return true;\n    } catch (error) {}\n  }, []);\n\n  useEffect(() => {\n    onFetchHandler();\n  }, [onFetchHandler]);\n\n  return (\n    <ProviderContext.Provider\n      value={{\n        loading,\n        entries: entries.filter((entry) =>\n          Object.values(entry)\n            .map((value) => value.toString().indexOf(search) !== -1)\n            .reduce((prev, curr) => prev || curr, false)\n        ),\n        authors,\n        onAddHandler,\n        onSearch,\n        onUpdateHandler,\n        onRemoveHandler,\n      }}\n    >\n      <Row>\n        {error && (\n          <Col span={24}>\n            <Alert message={error} type=\"error\" action={<Button onClick={onFetchHandler}>Recharger</Button>} />\n          </Col>\n        )}\n        <Col span={24}>{children}</Col>\n      </Row>\n    </ProviderContext.Provider>\n  );\n};\n\nexport default Provider;\n","import { useContext, useCallback, useState, useEffect } from \"react\";\nimport { ProviderContext } from \"../provider/Provider\";\nimport { Col, Row, Modal, Input, Upload, AutoComplete } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\n\nconst { Dragger } = Upload;\nconst EditEntry = ({ visible, id, setAlert, onModalToggleHanlder }) => {\n  const { entries, authors, onUpdateHandler } = useContext(ProviderContext);\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\n  const [fileAdd, setFileAdd] = useState({\n    name: \"\",\n    description: \"\",\n    owner: \"\",\n    file: void 0,\n  });\n\n  const onResetHandler = useCallback(() => {\n    setFileAdd({\n      name: \"\",\n      description: \"\",\n      owner: \"\",\n      file: void 0,\n    });\n  }, []);\n\n  const onUpdateClikHandler = useCallback(async () => {\n    setLoadingUpdate(true);\n    const completed = await onUpdateHandler({ ...fileAdd, id });\n    setLoadingUpdate(false);\n    if (completed) {\n      setAlert({ type: \"success\", message: \"Fichier est mis à jour avec succès\" });\n      onResetHandler();\n      onModalToggleHanlder();\n    } else {\n      setAlert({ type: \"error\", message: \"Opération échaouie, le fichier n'est pas mis à jour\" });\n    }\n  }, [fileAdd, id, onModalToggleHanlder, onResetHandler, onUpdateHandler, setAlert]);\n\n  const onSetFileAddHandler = useCallback((key) => {\n    return (event) => {\n      const {\n        target: { value },\n      } = event;\n      setFileAdd((state) => ({ ...state, [key]: value }));\n    };\n  }, []);\n\n  useEffect(() => {\n    const found = entries.find((e) => e.id === id);\n    if (typeof found !== \"object\") {\n      return;\n    }\n\n    console.log(\"foudn\", found, found.owner);\n    setFileAdd({ ...found });\n  }, [entries, id]);\n\n  console.log(fileAdd.owner);\n\n  return (\n    <Modal\n      title=\"Ajouter un nouveau fichier\"\n      visible={visible}\n      okButtonProps={{ disabled: loadingUpdate }}\n      cancelButtonProps={{ disabled: loadingUpdate }}\n      okText=\"Modifier\"\n      cancelText=\"Annuler\"\n      onCancel={onModalToggleHanlder}\n      onOk={onUpdateClikHandler}\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Input addonBefore={\"Nom du fichier\"} onChange={onSetFileAddHandler(\"name\")} value={fileAdd.name} />\n        </Col>\n        <Col span={24}>\n          <AutoComplete\n            style={{ width: \"100%\" }}\n            options={authors.map((author) => ({ label: author, value: author }))}\n            value={fileAdd.owner}\n            onSelect={(value) => {\n              setFileAdd((state) => ({ ...state, owner: value }));\n            }}\n          >\n            <Input addonBefore={\"Proprietaire\"} onChange={onSetFileAddHandler(\"owner\")} value={fileAdd.owner} />\n          </AutoComplete>\n        </Col>\n        <Col span={24}>\n          <Input.TextArea\n            rows={4}\n            autoSize={{ maxRows: 10, minRows: 4 }}\n            placeholder={\"Description\"}\n            onChange={onSetFileAddHandler(\"description\")}\n            value={fileAdd.description}\n          />\n        </Col>\n        <Col span={24}>\n          <Dragger\n            name=\"file\"\n            fileList={typeof fileAdd.file === \"undefined\" ? [] : [fileAdd.file]}\n            onRemove={() => {\n              setFileAdd((state) => ({ ...state, file: void 0 }));\n              return true;\n            }}\n            beforeUpload={(file) => {\n              setFileAdd((state) => ({ ...state, file }));\n              return false;\n            }}\n          >\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Cliquez ou lachez un fichier dans la zone</p>\n          </Dragger>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nexport default EditEntry;\n","import { useContext, useCallback, useState } from \"react\";\nimport { ProviderContext } from \"../provider/Provider\";\nimport { Button, Col, Table, Row, Modal, Alert } from \"antd\";\nimport { DeleteFilled, DownloadOutlined, EditFilled } from \"@ant-design/icons\";\nimport EditEntry from \"./EditEntry\";\n\nconst { confirm } = Modal;\nconst Entries = () => {\n  const { entries, loading, onRemoveHandler } = useContext(ProviderContext);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [alert, setAlert] = useState({ type: \"error\", message: \"\" });\n  const [updateItemID, setUpdateItemID] = useState(\"\");\n\n  const onModalToggleHanlder = useCallback(() => {\n    setIsModalVisible((state) => !state);\n  }, []);\n\n  const onRemoveEntryHandler = useCallback(\n    (id, name) => {\n      return () => {\n        confirm({\n          title: `Supprimer ${name}?`,\n          content: `Etes vous sur de vouloir supprimer le fichier suivant: ${name}.`,\n          okText: \"Oui, je confirme\",\n          cancelText: \"Annuler\",\n          onOk: async () => {\n            const completed = await onRemoveHandler(id);\n            if (completed) {\n              setAlert({ type: \"success\", message: \"Le fichier est supprimé avec succès\" });\n            } else {\n              setAlert({ type: \"error\", message: \"Fichier n'est pas supprimé\" });\n            }\n          },\n        });\n      };\n    },\n    [onRemoveHandler]\n  );\n\n  const onEditEntryHandler = useCallback(\n    (id, r) => {\n      return () => {\n        setUpdateItemID(id);\n        onModalToggleHanlder();\n      };\n    },\n    [onModalToggleHanlder]\n  );\n\n  return (\n    <>\n      <EditEntry\n        visible={isModalVisible}\n        id={updateItemID}\n        setAlert={setAlert}\n        onModalToggleHanlder={onModalToggleHanlder}\n      />\n      <Row gutter={[8, 16]}>\n        {alert.message !== \"\" && (\n          <Col span={24}>\n            <Alert\n              message={alert.message}\n              type={alert.type}\n              onClose={() => {\n                setAlert((state) => ({ ...state, message: \"\" }));\n              }}\n              closable\n            />\n          </Col>\n        )}\n        <Col span={24}>\n          <Table\n            dataSource={entries}\n            loading={loading}\n            rowKey={(record) => record.id}\n            title={() => <strong>Tous vous documents sont listés ci-dessous</strong>}\n            pagination={{\n              defaultPageSize: 25,\n              disabled: false,\n              position: [\"bottomRight\"],\n              showTitle: true,\n              pageSizeOptions: [25, 50, 100, 250, 500],\n              showTotal: (total) => <strong>Nombre du documents enregistré est: {total}</strong>,\n            }}\n            columns={[\n              {\n                title: \"Nom\",\n                onFilter(value, record) {\n                  return record.name.indexOf(value) !== -1;\n                },\n                sorter(a, b) {\n                  return a.name > b.name ? 1 : -1;\n                },\n                render(_, record) {\n                  return record.name;\n                },\n              },\n              {\n                title: \"Description\",\n                filtered: true,\n                filterSearch: true,\n                onFilter(value, record) {\n                  return record.description.indexOf(value) !== -1;\n                },\n                render(_, record) {\n                  return record.description;\n                },\n              },\n              {\n                title: \"Proprietaire\",\n                onFilter(value, record) {\n                  return record.owner.indexOf(value) !== -1;\n                },\n                render(_, record) {\n                  return record.owner;\n                },\n              },\n              {\n                title: \"Crée le\",\n                sorter(a, b) {\n                  return a.createdAt > b.createdAt ? 1 : -1;\n                },\n                render(_, record) {\n                  return new Date(record.createdAt).toLocaleDateString(\"fr-fr\");\n                },\n              },\n              {\n                title: \"Modifié le\",\n                sorter(a, b) {\n                  return a.modifiedAt > b.modifiedAt ? 1 : -1;\n                },\n                render(_, record) {\n                  return new Date(record.modifiedAt).toLocaleDateString(\"fr-fr\");\n                },\n              },\n              {\n                title: \"Extension\",\n                onFilter(value, record) {\n                  return record.extension.indexOf(value) !== -1;\n                },\n                render(_, record) {\n                  return record.extension;\n                },\n              },\n              {\n                title: \"Nom fichier sur le system\",\n                onFilter(value, record) {\n                  return record.filename.indexOf(value) !== -1;\n                },\n                render(_, record) {\n                  return record.filename;\n                },\n              },\n              {\n                title: \"Actions\",\n                render(_, record) {\n                  return (\n                    <Row gutter={[8, 8]} wrap={false}>\n                      <Col>\n                        <Button\n                          shape=\"circle\"\n                          onClick={() => {\n                            window.open(\"http://localhost:8000/file?id=\" + record.id);\n                          }}\n                        >\n                          <DownloadOutlined />\n                        </Button>\n                      </Col>\n                      <Col>\n                        <Button\n                          onClick={onEditEntryHandler(record.id, record.name, record.description, record.owner)}\n                          shape=\"circle\"\n                        >\n                          <EditFilled />\n                        </Button>\n                      </Col>\n                      <Col>\n                        <Button shape=\"circle\" onClick={onRemoveEntryHandler(record.id, record.name)} danger>\n                          <DeleteFilled />\n                        </Button>\n                      </Col>\n                    </Row>\n                  );\n                },\n              },\n            ]}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Entries;\n","import { Button, Col, Row, Modal, Input, AutoComplete, Upload, Alert } from \"antd\";\nimport { FileAddFilled, InboxOutlined } from \"@ant-design/icons\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { ProviderContext } from \"../provider/Provider\";\n\nconst { Dragger } = Upload;\n\nconst AddEntry = () => {\n  const { authors, onAddHandler, onSearch } = useContext(ProviderContext);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [alert, setAlert] = useState({ type: \"error\", message: \"\" });\n  const [fileAdd, setFileAdd] = useState({\n    name: \"\",\n    description: \"\",\n    owner: \"\",\n    file: void 0,\n  });\n  const [loading, setLoading] = useState(false);\n  const onSetFileAddHandler = useCallback((key) => {\n    return (event) => {\n      const {\n        target: { value },\n      } = event;\n      setFileAdd((state) => ({ ...state, [key]: value }));\n    };\n  }, []);\n\n  const onModalToggleHanlder = useCallback(() => {\n    setIsModalVisible((state) => !state);\n  }, []);\n\n  const onResetHandler = useCallback(() => {\n    setFileAdd({\n      name: \"\",\n      description: \"\",\n      owner: \"\",\n      file: void 0,\n    });\n  }, []);\n\n  const onAddClikHandler = useCallback(async () => {\n    setLoading(true);\n    const completed = await onAddHandler(fileAdd);\n    setLoading(false);\n    if (completed) {\n      setAlert({ type: \"success\", message: \"Fichier est ajouté avec succès\" });\n      onResetHandler();\n      onModalToggleHanlder();\n    } else {\n      setAlert({ type: \"error\", message: \"Opération échaouie, le fichier n'est pas ajouté\" });\n    }\n  }, [fileAdd, onAddHandler, onModalToggleHanlder, onResetHandler]);\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      {alert.message !== \"\" && (\n        <Col span={24}>\n          <Alert\n            message={alert.message}\n            type={alert.type}\n            onClose={() => {\n              setAlert((state) => ({ ...state, message: \"\" }));\n            }}\n            closable\n          />\n        </Col>\n      )}\n      <Col flex=\"1 1 auto\">\n        <Input.Search size=\"large\" placeholder=\"chercher parmi vos documents et proprietaires\" onSearch={onSearch} />\n      </Col>\n      <Col flex=\"1 1 auto\"></Col>\n      <Col>\n        <Button type=\"primary\" size=\"large\" onClick={onModalToggleHanlder}>\n          <Row gutter={8} wrap={false}>\n            <Col>\n              <FileAddFilled />\n            </Col>\n            <Col>Add</Col>\n          </Row>\n        </Button>\n      </Col>\n      <Modal\n        title=\"Ajouter un nouveau fichier\"\n        visible={isModalVisible}\n        okButtonProps={{ disabled: loading }}\n        cancelButtonProps={{ disabled: loading }}\n        okText=\"Ajouter\"\n        cancelText=\"Annuler\"\n        onCancel={onModalToggleHanlder}\n        onOk={onAddClikHandler}\n      >\n        <Row gutter={[8, 8]}>\n          <Col span={24}>\n            <Input addonBefore={\"Nom du fichier\"} onChange={onSetFileAddHandler(\"name\")} value={fileAdd.name} />\n          </Col>\n          <Col span={24}>\n            <AutoComplete\n              style={{ width: \"100%\" }}\n              value={fileAdd.owner}\n              options={authors.map((author) => ({ label: author, value: author }))}\n              onSelect={(value) => {\n                setFileAdd((state) => ({ ...state, owner: value }));\n              }}\n            >\n              <Input addonBefore={\"Proprietaire\"} onChange={onSetFileAddHandler(\"owner\")} value={fileAdd.owner} />\n            </AutoComplete>\n          </Col>\n          <Col span={24}>\n            <Input.TextArea\n              rows={4}\n              autoSize={{ maxRows: 10, minRows: 4 }}\n              placeholder={\"Description\"}\n              onChange={onSetFileAddHandler(\"description\")}\n              value={fileAdd.description}\n            />\n          </Col>\n          <Col span={24}>\n            <Dragger\n              name=\"file\"\n              fileList={typeof fileAdd.file === \"undefined\" ? [] : [fileAdd.file]}\n              onRemove={() => {\n                setFileAdd((state) => ({ ...state, file: void 0 }));\n                return true;\n              }}\n              beforeUpload={(file) => {\n                setFileAdd((state) => ({ ...state, file }));\n                return false;\n              }}\n            >\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              <p className=\"ant-upload-text\">Cliquez ou lachez un fichier dans la zone</p>\n            </Dragger>\n          </Col>\n        </Row>\n      </Modal>\n    </Row>\n  );\n};\n\nexport default AddEntry;\n","import Provider from \"../provider/Provider\";\nimport Entries from \"./Entries\";\nimport { PageHeader, Row, Col, Layout } from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport AddEntry from \"./AddEntry\";\n\nconst App = () => {\n  return (\n    <Layout style={{ height: \"100%\", overflow: \"hidden\", overflowY: \"auto\" }}>\n      <Provider>\n        <Row justify=\"center\" gutter={[8, 32]}>\n          <Col span={24}>\n            <PageHeader title=\"Mini-system information\" subTitle=\"WORK SMART\" />\n          </Col>\n          <Col span={22}>\n            <Content>\n              <Row gutter={[8, 8]}>\n                <Col span={24}>\n                  <AddEntry />\n                </Col>\n                <Col span={24}>\n                  <Entries />\n                </Col>\n              </Row>\n            </Content>\n          </Col>\n        </Row>\n      </Provider>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport \"antd/dist/antd.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}